@model IEnumerable<RealEstateMVC.Models.Property>

@using System.Security.Claims
@inject RealEstateMVC.Data.ApplicationDbContext _context

<section class="property" id="property">
    <div class="container">
        <p class="section-subtitle">«·⁄ﬁ«—« </p>
        <h2 class="h2 section-title">⁄ﬁ«—«  „„Ì“…</h2>
        @* @if (TempData["Success"] != null) *@
        @* { *@
        @*     <div class="alert alert-success alert-dismissible fade show" role="alert"> *@
        @*         <i class="bi bi-check-circle-fill"></i> @TempData["Success"] *@
        @*         <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> *@
        @*     </div> *@
        @* } *@

        <ul class="property-list has-scrollbar">
            @foreach (var property in Model)
            {
                var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                var alreadyRequested = false;

                if (User.Identity.IsAuthenticated)
                {
                    alreadyRequested = _context.Bookings
                    .Any(b => b.PropertyId == property.Id && b.UserId == userId);
                }

                <li>
                    <div class="property-card w-100">
                        <figure class="card-banner">
                            <a href="@Url.Action("Details", "Properties", new { id = property.Id })">
                                <img src="@property.MainImageUrl" alt="@property.Title" class="w-100">
                            </a>
                            <div class="card-badge green">@((property.Price > 100000) ? "··»Ì⁄" : "··≈ÌÃ«—")</div>
                            <div class="banner-actions">
                                <button class="banner-actions-btn">
                                    <ion-icon name="location"></ion-icon>
                                    <address>@property.Address</address>
                                </button>
                            </div>
                        </figure>

                        <div class="card-content">
                            <div class="card-price"><strong>@property.Price.ToString("N0")</strong> —Ì«·</div>
                            <h3 class="h3 card-title"><a href="#">@property.Title</a></h3>
                            <p class="card-text">@property.Description</p>
                            <ul class="card-list">
                                <li class="card-item"><strong>@property.Bedrooms</strong><ion-icon name="bed-outline"></ion-icon><span>€—› ‰Ê„</span></li>
                                <li class="card-item"><strong>@property.Bathrooms</strong><ion-icon name="man-outline"></ion-icon><span>Õ„«„« </span></li>
                                <li class="card-item"><strong>@property.Area</strong><ion-icon name="square-outline"></ion-icon><span>„≤</span></li>
                            </ul>
                        </div>

                        <div class="card-footer">
                            <div class="card-footer-actions">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    if (alreadyRequested)
                                    {
                                        <button class="btn btn-sm btn-success" disabled>
                                            <ion-icon name="checkmark-circle-outline"></ion-icon>  „ «·ÿ·» „”»ﬁ«
                                        </button>
                                    }
                                    else
                                    {
                                        <form asp-controller="Booking" asp-action="Create" method="post">
                                            <input type="hidden" name="PropertyId" value="@property.Id" />
                                            <button type="submit" class="btn btn-sm btn-outline-primary">
                                                <ion-icon name="add-circle-outline"></ion-icon> ÿ·» Â–« «·⁄ﬁ«—
                                            </button>
                                        </form>
                                    }
                                }
                                else
                                {
                                    <a href="/Identity/Account/Login" class="btn btn-sm btn-outline-secondary">
                                        <ion-icon name="log-in-outline"></ion-icon> ”Ã· «·œŒÊ· ·ÿ·» «·⁄ﬁ«—
                                    </a>
                                }

                            </div>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>
</section>
